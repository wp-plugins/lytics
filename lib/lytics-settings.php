<?php

/**
* The settings class
* handles registration of settings and field generation
*/
class LyticsSettings{

    private $version;

    /**
    * Initializes all of the settings related parts of the plugin.
    * @since 0.1
    * @author Russell Fair
    * @todo add better multisite support
    */
    function init(){
	add_action( 'admin_menu', array( $this, 'create_menu' ) );
	add_action( 'admin_init', array( $this, 'register_settings' ) );
	add_action( 'admin_init', array( $this, 'register_sections' ) );
	add_action( 'admin_init', array( $this, 'register_fields' ) );
	add_filter( 'lytics_id_hash', array( $this, 'get_app_id_from_tag'), 10, 1);
    }

    /**
    * Sets up our plugin settings link
    * @since 0.1
    * @author Russell Fair
    * @todo add a settings notice on plugin activation / not configured
    */
    function create_menu(){
	add_options_page( __('Lytics Configuration', 'lytics'), __('Lytics', 'lytics'), 'manage_options', 'lytics-options', array( $this, 'settings_page_output' ) );
    }

    /**
    * Outputs the form for the settings page
    * @since 0.1
    * @author Russell Fair
    * @todo add a settings notice on plugin activation / not configured
    */
    function settings_page_output(){
	include( 'partial-settings-form.php' );
    }

    /**
    * Registers our two settings with WordPress
    * @since 0.1
    * @author Russell Fair
    */
    function register_settings(){
	register_setting( 'lytics_account', 'lytics_script_tag', array( $this, 'validate_account_id' ) );
	register_setting( 'lytics_account', 'lytics_addon_selection', array( $this, 'validate_addon_selection' ) );
    }

    /**
    * Validates the script src on save, and saves the hashed ID, if applicable.
    * @since 0.1
    * @author Russell Fair
    * @todo add a settings notice on plugin activation / not configured
    * @param string $script the javascript tag generated by Lytics
    */
    function validate_account_id( $script ){
	$account_id = apply_filters( 'lytics_id_hash', $script );
	if ( $account_id ){
	    update_option( 'lytics_id_hash', $account_id );
	} else {
	    add_settings_error( 'lytics_account', 'lytics-id-invalid', __('A valid Lytics id hash could not be found in the script tag that you entered. Please check your tag and try again.'), 'error');
	}
	return $script;
    }

    /**
    * Validates the addons
    * @since 0.1
    * @author Russell Fair
    * @todo add a settings notice on plugin activation / not configured
    * @param array $addons the selected addons
    * @return array $addons the checked keys to save
    */
    function validate_addon_selection( $addons ){
        if ( $addons && is_array( $addons )){
            $addons= array_keys( $addons );
        }
        return $addons;
    }

    /**
    * Extracts the hashed url from the script tag (the part we need)
    * @since 0.1
    * @author Russell Fair
    * @todo add a settings notice on plugin activation / not configured
    * @param string $script the script tag passed through the settings
    */
    function get_app_id_from_tag( $script ){
	    /*
	    * Current Script Tag looks like this:
	    * <script src="https://api.lytics.io/api/tag/c999001df46226bab2a69b8865401992/lio.js"></script>
	    */
	    preg_match_all(
		'~api.lytics.io/api/tag/(.*?)/lio.js~',
		$script,
		$app_id
	    );
	    return isset($app_id[1][0]) ? $app_id[1][0] : false;
    }

    /**
    * Registers our two settings sections
    * @since 0.1
    * @author Russell Fair
    */
    function register_sections(){
	add_settings_section( 'lytics_account', __( 'Lytics Account Information', 'lytics' ), array($this, 'accout_instructions'), 'lytics_account' );
	add_settings_section( 'lytics_addon_selection', __( 'Addon Selection', 'lytics' ), array($this, 'addon_selection'), 'lytics_account' );
    }

    /**
    * The instructions for grabbing the script tag from Lytics
    * @since 0.1
    * @author Russell Fair
    * @todo clean up this output so that it is more readable
    */
    function accout_instructions( ){ ?>
            <p> <?php _e( 'If you haven\'t already, zip over to www.getlytics.com to sign up for a free Lytics account.', 'lytics'); ?>
	<p> <?php _e( 'Enter your Lytics tracking tag as shown on your Lytics account dashboard.', 'lytics'); ?>
	<p> <?php _e( 'To find your Lytics tracking tag, visit the <i>Integrations</i> tab on your Lytics Dashboard and navigate to the instructions for integrating Lytics.', 'lytics'); ?>
	<p> <?php _e( 'https://admin.lytics.io/#/documentation/jstag_anon' ); ?>
	<p> <?php _e( 'Then click "Install Tag" to reveal your tracking tag.', 'lytics'); ?>
    <?php
    }

    /**
    * The instructions for the addon section
    * @since 0.1
    * @author Russell Fair
    */
    function addon_selection(){ ?>
	<p> <?php _e( 'Select the addons that you wish to enable on your site.' , 'lytics' ); ?>
    <?php
    }

    /**
    * Registers our settings fields for the script tag and addons
    * @since 0.1
    * @author Russell Fair
    */
    function register_fields(){
	add_settings_field( 'lytics_script_tag', __('Script Tag'), array( $this, 'script_tag_field'), 'lytics_account', 'lytics_account', array() );
	add_settings_field( 'lytics_addon_selection', __('Enabled Addons'), array( $this, 'addon_selection_field'), 'lytics_account', 'lytics_addon_selection', array() );
    }

    /**
    * Outputs the script tag field
    * @since 0.1
    * @author Russell Fair
    */
    function script_tag_field(){
	$value = get_option('lytics_script_tag');
	?>
	<textarea name="lytics_script_tag" cols="120"><?php echo esc_textarea( $value ); ?></textarea>
	<?php
    }

    /**
    * Outputs the addon selection checkboxes
    * @since 0.1
    * @author Russell Fair
    */
    function addon_selection_field(){
	$enabled_addons = get_option('lytics_addon_selection');

	require_once('lytics-addons.php');
	$addons = new LyticsAddons;
	$addon_list = $addons->get_addons();

	foreach ( $addon_list as $addon => $addon_settings ){
	    $checked = ( is_array( $enabled_addons) && in_array( $addon_settings['id'], $enabled_addons ) ) ? ' checked': '' ;
	    printf('<p><input type="checkbox" name="lytics_addon_selection[%s]"%s/>', $addon_settings['id'], $checked );
	    printf('<label for="lytics_addon_selection[%s]">%s</label>', $addon_settings['id'], $addon_settings['name'] );
	}
    }

}
